package net.is_bg.ltf.db.common.client;

public interface IPrepStatementAdditionalData {
	String getSql();
    int getQueryType();  //1 select , 2 update, 3 stored proc, 4 batch
	int getResultSetType();
	int getResultSetConcurrency();
	int getResultSetHoldability();
	int getAutoGeneratedKeys();
	int[] getColumnIndexes();
	String[] getColumnNames();
	
	public static class CustomPrepStatementAdditionalDataBuilder{
		String sql;
	    int queryType = 1;     //1 select , 2 update, 3 stored proc, 4 batch
		int resultSetType;
		int resultSetConcurrency;
		int resultSetHoldability;
		int autoGeneratedKeys;
		int[] columnIndexes;
		String[] columnNames;
		
		public CustomPrepStatementAdditionalDataBuilder setSql(String sql) {
			this.sql = sql;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setQueryType(int queryType) {
			this.queryType = queryType;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setResultSetType(int resultSetType) {
			this.resultSetType = resultSetType;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setResultSetConcurrency(int resultSetConcurrency) {
			this.resultSetConcurrency = resultSetConcurrency;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setResultSetHoldability(int resultSetHoldability) {
			this.resultSetHoldability = resultSetHoldability;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setAutoGeneratedKeys(int autoGeneratedKeys) {
			this.autoGeneratedKeys = autoGeneratedKeys;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setColumnIndexes(int[] columnIndexes) {
			this.columnIndexes = columnIndexes;
			return this;
		}

		public CustomPrepStatementAdditionalDataBuilder setColumnNames(String[] columnNames) {
			this.columnNames = columnNames;
			return this;
		}

		public IPrepStatementAdditionalData build() {
			PrepStatementAdditionalData p = new PrepStatementAdditionalData();
			p.sql = sql;
			p.autoGeneratedKeys = autoGeneratedKeys;
			p.columnIndexes = columnIndexes;
			p.columnNames = columnNames;
			p.queryType = queryType;
			p.resultSetConcurrency = resultSetConcurrency;
			p.resultSetType = resultSetType;
			p.resultSetHoldability = resultSetHoldability;
			return p;
		}
	}
}
